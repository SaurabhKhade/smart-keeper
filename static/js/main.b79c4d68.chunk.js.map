{"version":3,"sources":["Header.jsx","NoteField.jsx","AllNotes.jsx","SearchBar.jsx","App.jsx","index.js"],"names":["Header","className","NoteField","props","days","Months","toggleNotefield","toggleExpand","expanded","noteHandler","e","setNote","oldNote","target","name","value","clearNote","title","desc","noteManager","Button","onClick","note","i","allNotes","length","window","confirm","notesManager","old","splice","day","Date","getDay","month","getMonth","date","getDate","year","getFullYear","noteDate","alert","style","top","type","placeholder","onChange","autoComplete","AllNotes","emptyNote","map","index","arr","showNote","deleter","SearchBar","useState","result","setResult","search","setSearch","flag","toggleSearched","display","searched","App","setLocalStorage","localStorage","setItem","JSON","stringify","useEffect","parse","getItem","local","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b79c4d68.chunk.js","sourcesContent":["import React from 'react';\nimport NotesIcon from '@material-ui/icons/Notes';\n\nconst Header=()=>{\n    return(\n        <div className=\"header\">\n            <div className=\"heading\">\n                <NotesIcon className=\"icon\"/>\n                <h1>Smart Keeper</h1>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ReplaySharpIcon from '@material-ui/icons/ReplaySharp';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst NoteField=(props)=>{\n    \n    const days=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n    const Months=['January','February','March','April','May','June','July','August','September','October','November','December'];\n    \n    const toggleNotefield=()=>{\n        props.toggleExpand(!props.expanded);\n    };\n    \n    const noteHandler=(e)=>{\n        props.setNote((oldNote)=>{\n            oldNote[e.target.name]=e.target.value;\n            return {...oldNote};\n        });\n    };\n    \n    const addNote=()=>{\n        if (props.note.title===\"\" || props.note.desc===\"\"){\n            alert (\"note can't be empty!\");\n            return;\n        }\n        \n        for (var i = 0; i < props.allNotes.length; i++) {\n            if (props.note.title===props.allNotes[i].title) {\n                if(window.confirm(\"Do you want to replace previous note with same title?\")){\n                    props.notesManager((old)=>{\n                        old.splice(i,1)\n                        return [...old];\n                    });\n                } else {\n                    return;\n                }\n                break;\n            }\n        }\n        \n        let day=days[new Date().getDay()];\n        let month=Months[new Date().getMonth()];\n        let date=new Date().getDate();\n        let year=new Date().getFullYear();\n        let noteDate=`${day} ${month} ${date}, ${year}`;\n        props.notesManager((old)=>{\n            return ([{\n                title:props.note.title,\n                desc:props.note.desc,\n                date:noteDate\n            },...old]);\n        });\n        clearNote();\n        toggleNotefield();\n    };\n    \n    const clearNote=()=>{\n        props.setNote({\n            title:\"\",\n            desc:\"\"\n        });\n    };\n    \n    const noteManager=(\n        <>\n            <Button className=\"addNote\"\n                onClick={clearNote}>\n                <ReplaySharpIcon \n                    className=\"icon\"/>\n            </Button>\n            <Button className=\"addNote\"\n                onClick={addNote}>\n                <SaveIcon \n                    className=\"icon\"/>\n            </Button>\n        </>\n    );\n    return (\n        <>\n        <div className=\"notefield\"\n            style={{top:props.expanded?\"120px\":\"100%\"}}>\n            <div className=\"title\">\n                <input type=\"text\"\n                    placeholder=\"Title\"\n                    name=\"title\"\n                    onChange={noteHandler}\n                    value={props.note.title}\n                    autoComplete=\"off\"/>\n            </div>\n            <div className=\"desc\">\n                <textarea placeholder=\"Note...\"\n                    name=\"desc\"\n                    value={props.note.desc}\n                    onChange={noteHandler}/>\n            </div>\n        </div>\n        <div className={props.expanded?\"top\":\"bottom\"}>\n            {props.expanded?noteManager:\"\"}\n            <Button className=\"addNote\"\n                    onClick={toggleNotefield}>\n                {props.expanded?<CloseIcon className=\"icon\"/>:<NoteAddIcon className=\"icon\"/>}\n            </Button>\n        </div>\n        </>\n    );\n};\n\nexport default NoteField;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst AllNotes=(props)=>{\n\n    const note=(note,index,arr)=>{\n        \n        return (\n            <li key={index}>\n                <div className=\"note-about\"\n                    onClick={()=>{props.showNote(index);}}>\n                    <p>{note.title}</p>\n                    <p>{note.date}</p>\n                </div>\n                <div className=\"icons\">\n                    <Button className=\"btn\"\n                        onClick={()=>{props.deleter(index);}}>\n                        <DeleteIcon\n                            className=\"icon\"/>\n                    </Button>\n                </div>\n            </li>\n        );\n    }\n    \n    const emptyNote=<li><p>Add a Note</p></li>;\n    \n    return (\n        <div className=\"allnotes\"> \n            <ul>\n                {props.allNotes.length===0?emptyNote:\"\"}\n                {props.allNotes.map(note)}\n            </ul>\n        </div>\n    );\n};\n\nexport default AllNotes;","import React,{useState} from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst SearchBar=(props)=>{\n    \n    let [result,setResult]=useState({\n        title:\"\",\n        desc:\"\",\n        date:\"\"\n    });\n    \n    let [search,setSearch]=useState(\"\");\n    \n    const Searched=()=>{\n        let flag=true;\n        for(var i=0;i<props.allNotes.length;i++) {\n            if (props.allNotes[i].title===search) {\n                setResult({\n                    title:props.allNotes[i].title,\n                    desc:props.allNotes[i].desc,\n                    date:props.allNotes[i].date\n                });\n                props.toggleSearched(true);\n                flag=false;\n                break;\n            }\n        }\n        if (flag) {\n            props.toggleSearched(true);\n            setResult({\n                title:\"Not Found\",\n                desc:\"\",\n                date:\"\"\n            });\n        }\n    };\n    \n    const input=(e)=>{\n        setSearch(e.target.value)\n    };\n    \n    const detail=()=>{\n        for (var i = 0; i < props.allNotes.length; i++) {\n            if(props.allNotes[i].title===search) {\n                props.showNote(i);\n                break;\n            }\n        }\n    };\n    \n    return(\n        <>\n        <div className=\"searchBar\">\n            <SearchIcon className=\"icon\"\n                onClick={Searched}/>\n            <input  type=\"text\"\n                    placeholder=\"Search a Note\"\n                    value={search}\n                    onChange={input}/>\n        </div>\n        <div className=\"SearchBar-b\"></div>\n        <div className=\"SearchedItem\">\n            <ul style={{display:props.searched?\"block\":\"none\"}}>\n                <li onClick={detail}>\n                    <div className=\"note-about\">\n                        <p>{result.title}</p>\n                        <p>{result.date}</p>\n                    </div>\n                    <div className=\"icons\">\n                        <Button className=\"btn\">\n                            <DeleteIcon\n                                className=\"icon\"/>\n                        </Button>\n                    </div>\n                </li>\n            </ul>\n        </div>\n        </>\n    );\n};\n\nexport default SearchBar;","import React,{useState, useEffect} from 'react';\nimport Header from './Header';\nimport NoteField from './NoteField';\nimport AllNotes from './AllNotes';\nimport SearchBar from './SearchBar';\n\nconst App = () => {\n    let [note,setNote]=useState({\n        title:\"\",\n        desc:\"\"\n    });\n    \n    let [searched,toggleSearched]=useState(false);\n    \n    let [expanded,toggleExpand]=useState(false);\n    \n    let [allNotes,notesManager]=useState([]);\n    \n    const setLocalStorage=()=>{\n        localStorage.setItem(\"notes\", JSON.stringify(allNotes));\n    };\n    \n    const getLocalStorage=()=>{\n        notesManager(JSON.parse(localStorage.getItem(\"notes\")));\n    };\n    \n    useEffect(() => {\n        getLocalStorage();\n        toggleSearched(false);\n    }, []);\n    \n    useEffect(()=>{\n        setLocalStorage();\n    }, [allNotes]);\n    \n    const showNote=(i)=>{\n        setNote({\n            title:allNotes[i].title,\n            desc:allNotes[i].desc\n        });\n        toggleExpand(true);\n    }\n    \n    const deleter=i=>{\n        if(window.confirm(\"do you really want to delete this note?\")){\n            notesManager((old)=>{\n                old.splice(i,1);\n                return [...old];\n            });\n        }\n    };\n    \n    return(\n        <>\n            <Header/>\n            <SearchBar\n                allNotes={allNotes}\n                searched={searched}\n                toggleSearched={toggleSearched}\n                showNote={showNote}/>\n            <AllNotes allNotes={allNotes}\n                notesManager={notesManager}\n                showNote={showNote}\n                deleter={deleter}/>\n            <NoteField \n                notesManager={notesManager}\n                local={setLocalStorage}\n                setNote={setNote}\n                note={note}\n                expanded={expanded}\n                toggleExpand={toggleExpand}\n                allNotes={allNotes}/>\n        </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n   <App/>,\n   document.getElementById('root')\n);"],"sourceRoot":""}